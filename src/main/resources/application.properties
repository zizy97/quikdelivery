#Datasource
spring.datasource.url= jdbc:mysql://db4free.net/quikdbappdb
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= false
spring.jpa.hibernate.ddl-auto= update
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
spring.jpa.show-sql=true
server.port=${PORT}
#Google Oauth2 Service
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/api/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.google.scope[0]=email
spring.security.oauth2.client.registration.google.scope[1]=profile

#Google Mail Service
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

#AWS S3 Bucket
amazon.s3.endpoint=https://quikapp-image-store.s3-sa-east-1.amazonaws.com/



#JWT Configs
jwt.accessToken.expirationAfterHours=1
jwt.refreshToken.expirationAfterDays=1


app.oauth2.authorizedRedirectUris=http://localhost:3000/oauth2/redirect,myandroidapp://oauth2/redirect,myiosapp://oauth2/redirect

#JWT
jwt.token.prefix=Bearer 

#Secret Keys
#spring.config.import=optional:secrets.properties


#Credintials
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}

spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}

amazon.s3.access-key=${AWS_ACCESS_KEY}
amazon.s3.secret-key=${AWS_SECRET_KEY}

jwt.secret=${JWT_SECRET}

spring.datasource.username= ${DB_USERNAME}
spring.datasource.password= ${DB_PASSWORD}

#Frontend url
app.frontend.url = https://quikdeliver.herokuapp.com

